<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="储存签字信息" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1577929961000</longProp>
        <longProp name="ThreadGroup.end_time">1577929961000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="访问配置" enabled="true">
          <stringProp name="filename">../csv/model.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">ip,port,path</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
        </CSVDataSet>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="访问路径" enabled="true">
          <stringProp name="BeanShellSampler.query">String path = vars.get(&quot;path&quot;);
vars.put(&quot;path&quot;,path+&quot;/weChatApply/saveSignature&quot;);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="数据库配置" enabled="true">
          <stringProp name="IncludeController.includepath">model_DB.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="正常场景" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="储存签字信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;header&quot;: {&#xd;
        &quot;transRefGUID&quot;: &quot;1231234342356767878&quot;, &#xd;
        &quot;transDate&quot;: &quot;2017-8-14&quot;, &#xd;
        &quot;transTime&quot;: &quot;11:29:00&quot;, &#xd;
        &quot;businessType&quot;: &quot;001&quot;&#xd;
    }, &#xd;
    &quot;body&quot;: {&#xd;
        &quot;id&quot;: &quot;C65483&quot;, &#xd;
        &quot;orderNo&quot;: &quot;${orderNo}&quot;, &#xd;
        &quot;inputFactors&quot;: {&#xd;
            &quot;age&quot;: &quot;18&quot;, &#xd;
            &quot;payEndYear&quot;: &quot;10Y&quot;, &#xd;
            &quot;insuYear&quot;: &quot;30Y&quot;, &#xd;
            &quot;amnt&quot;: &quot;50000&quot;, &#xd;
            &quot;combcode&quot;: &quot;C65483&quot;, &#xd;
            &quot;organid&quot;: &quot;-1&quot;&#xd;
        }, &#xd;
        &quot;addRisks&quot;: [ ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ip}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="前置操作----生成订单号" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.*;
Random random = new Random();
int i = random.nextInt(100);
String orderNo = String.valueOf(i);
log.info(&quot;orderNo======&quot;+orderNo);
vars.put(&quot;orderNo&quot;,orderNo);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="后置操作-----查询新增成功后的数据" enabled="true">
              <stringProp name="dataSource">243</stringProp>
              <stringProp name="query">select * from t_policy_signature where order_no = &apos;${orderNo}&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable">t_policy_signature</stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="数据校验" enabled="true">
            <stringProp name="BeanShellSampler.query">import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.*;
import java.util.*;
import org.apache.commons.lang3.StringUtils;
import java.text.SimpleDateFormat;
	String dataResult = &quot;false&quot;;
	String dataMessage = &quot;success&quot;;
	StringBuffer buffer=new StringBuffer();
//获取接口返回数据
String resData = prev.getResponseDataAsString();
JSONObject dataObj = JSONObject.parseObject(resData);
Map data = dataObj.get(&quot;data&quot;);
String id = data.get(&quot;id&quot;);
log.info(&quot;void======&quot;+id);
//获取sql返回数据
Object t_policy_signature = vars.getObject(&quot;t_policy_signature&quot;);
String sqlId = t_policy_signature.get(0).get(&quot;id&quot;);
log.info(&quot;sqlId======&quot;+sqlId);

//比较
if(id.equals(sqlId)){
		
}else{
	dataResult=&quot;false&quot;;
	dataMessage=&quot;数据不一致&quot;;	
}

vars.put(&quot;dataResult&quot;,dataResult);
vars.put(&quot;dataMessage&quot;,dataMessage);

</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query"> String result = vars.get(&quot;dataResult&quot;);
 String message = vars.get(&quot;dataMessage&quot;);
if(&quot;false&quot;.equals(result)){
	Failure = false;
	FailureMessage = message;	
}else{
	Failure = true;
	FailureMessage = message;	
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="异常场景" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="储存签字信息------combcode不传" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;header&quot;: {&#xd;
        &quot;transRefGUID&quot;: &quot;1231234342356767878&quot;, &#xd;
        &quot;transDate&quot;: &quot;2017-8-14&quot;, &#xd;
        &quot;transTime&quot;: &quot;11:29:00&quot;, &#xd;
        &quot;businessType&quot;: &quot;001&quot;&#xd;
    }, &#xd;
    &quot;body&quot;: {&#xd;
        &quot;id&quot;: &quot;C65483&quot;, &#xd;
        &quot;orderNo&quot;: &quot;${orderNo}&quot;, &#xd;
        &quot;inputFactors&quot;: {&#xd;
            &quot;age&quot;: &quot;18&quot;, &#xd;
            &quot;payEndYear&quot;: &quot;10Y&quot;, &#xd;
            &quot;insuYear&quot;: &quot;30Y&quot;, &#xd;
            &quot;amnt&quot;: &quot;50000&quot;, &#xd;
            &quot;organid&quot;: &quot;-1&quot;&#xd;
        }, &#xd;
        &quot;addRisks&quot;: [ ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ip}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="储存签字信息------inputFactors不传" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;header&quot;: {&#xd;
        &quot;transRefGUID&quot;: &quot;1231234342356767878&quot;, &#xd;
        &quot;transDate&quot;: &quot;2017-8-14&quot;, &#xd;
        &quot;transTime&quot;: &quot;11:29:00&quot;, &#xd;
        &quot;businessType&quot;: &quot;001&quot;&#xd;
    }, &#xd;
    &quot;body&quot;: {&#xd;
        &quot;id&quot;: &quot;C65483&quot;, &#xd;
        &quot;orderNo&quot;: &quot;${orderNo}&quot;,&#xd;
        &quot;addRisks&quot;: [ ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ip}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="储存签字信息------addRisks不传" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;header&quot;: {&#xd;
        &quot;transRefGUID&quot;: &quot;1231234342356767878&quot;, &#xd;
        &quot;transDate&quot;: &quot;2017-8-14&quot;, &#xd;
        &quot;transTime&quot;: &quot;11:29:00&quot;, &#xd;
        &quot;businessType&quot;: &quot;001&quot;&#xd;
    }, &#xd;
    &quot;body&quot;: {&#xd;
        &quot;id&quot;: &quot;C65483&quot;, &#xd;
        &quot;orderNo&quot;: &quot;${orderNo}&quot;, &#xd;
        &quot;inputFactors&quot;: {&#xd;
            &quot;age&quot;: &quot;18&quot;, &#xd;
            &quot;payEndYear&quot;: &quot;10Y&quot;, &#xd;
            &quot;insuYear&quot;: &quot;30Y&quot;, &#xd;
            &quot;amnt&quot;: &quot;50000&quot;, &#xd;
            &quot;combcode&quot;: &quot;C65483&quot;, &#xd;
            &quot;organid&quot;: &quot;-1&quot;&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ip}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
