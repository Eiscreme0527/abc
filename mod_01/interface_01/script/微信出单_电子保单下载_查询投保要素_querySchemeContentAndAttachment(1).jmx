<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="查询投保要素" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="数据库连接" enabled="false">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1 from dual</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="dbUrl">jdbc:oracle:thin:@10.135.100.207:1521:test</stringProp>
          <stringProp name="driver">oracle.jdbc.OracleDriver</stringProp>
          <stringProp name="initQuery"></stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">test@123</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">vp_productcloud_test</stringProp>
          <boolProp name="preinit">false</boolProp>
          <stringProp name="connectionProperties"></stringProp>
        </JDBCDataSource>
        <hashTree/>
        <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="数据库连接池" enabled="true">
          <stringProp name="IncludeController.includepath">./微信出单_JDBC.jmx</stringProp>
        </IncludeController>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="简单控制器" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="schemeFlag=Y&amp;&amp;schemeCode!=null" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询pf_comb_info" enabled="true">
              <stringProp name="dataSource">vp_productcloud_test</stringProp>
              <stringProp name="query">select * from pf_comb_info where scheme_flag = &apos;Y&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout">180</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">pf_comb_info</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取COMB_CODE" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.*;

Object pf_comb_info = vars.getObject(&quot;pf_comb_info&quot;);
Random random = new Random();
int size = pf_comb_info.size();
int i = random.nextInt(size);
Object sqlObj = pf_comb_info.get(i);

log.info(&quot;pf_comb_info=====&quot;+sqlObj);
String combCode = sqlObj.get(&quot;COMB_CODE&quot;);
vars.put(&quot;combCode&quot;,combCode)

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询pf_scheme_info" enabled="true">
              <stringProp name="dataSource">vp_productcloud_test</stringProp>
              <stringProp name="query">select * from pf_scheme_info where comb_code = &apos;${combCode}&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout">180</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">pf_scheme_info</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取SCHEME_CODE" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.*;

Object pf_scheme_info = vars.getObject(&quot;pf_scheme_info&quot;);
Random random = new Random();
int size = pf_scheme_info.size();
int i = random.nextInt(size);
Object sqlObj = pf_scheme_info.get(i);

log.info(&quot;pf_scheme_info=====&quot;+sqlObj);

String schemeCode = sqlObj.get(&quot;SCHEME_CODE&quot;);
vars.put(&quot;schemeCode&quot;,schemeCode);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询投保要素------Y" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.135.100.53</stringProp>
              <stringProp name="HTTPSampler.port">8080</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/vp-product-cloud/comb/querySchemeContentAndAttachment/${combCode}/${schemeCode}/null</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  <stringProp name="-1945365448">&quot;msg&quot;:&quot;查询成功！&quot;</stringProp>
                  <stringProp name="-824124103">&quot;ret&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="PF_COMB_CONTENT" enabled="true">
                <stringProp name="dataSource">vp_productcloud_test</stringProp>
                <stringProp name="query">select * from PF_COMB_CONTENT where COMB_CODE = &apos;${combCode}&apos;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable">PF_COMB_CONTENT</stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCPostProcessor>
              <hashTree/>
              <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="PF_COMB_FILE" enabled="true">
                <stringProp name="dataSource">vp_productcloud_test</stringProp>
                <stringProp name="query">SELECT * FROM PF_COMB_FILE where COMB_CODE = &apos;${combCode}&apos;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable">PF_COMB_FILE</stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCPostProcessor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="数据校验" enabled="true">
              <stringProp name="BeanShellSampler.query">import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.*;
import java.util.*;
import org.apache.commons.lang3.StringUtils;
import java.text.SimpleDateFormat;

String dataResult = &quot;false&quot;;
String dataMessage = &quot;success&quot;;
StringBuffer buffer=new StringBuffer();
List newContentList = new ArrayList();

//获取接口返回数据
String resData = prev.getResponseDataAsString();
JSONObject dataObj = JSONObject.parseObject(resData);
Map data = dataObj.get(&quot;data&quot;);
//log.info(&quot;data======&quot;+data);
List attachments = data.get(&quot;attachments&quot;);
List contents = data.get(&quot;contents&quot;);
int size2 = contents.size();

//获取sql返回数据
Object PF_COMB_CONTENT = vars.getObject(&quot;PF_COMB_CONTENT&quot;);
Object PF_COMB_FILE = vars.getObject(&quot;PF_COMB_FILE&quot;);

//转换字段
//contents
for(int i =0;i&lt;PF_COMB_CONTENT.size();i++){
	Map newContentMap = new HashMap();
	Map contentMap = PF_COMB_CONTENT.get(i);
	newContentMap.put(&quot;showType&quot;,contentMap.get(&quot;SHOW_TYPE&quot;));
	newContentMap.put(&quot;id&quot;,contentMap.get(&quot;ID&quot;));
	newContentMap.put(&quot;text&quot;,contentMap.get(&quot;CONTENT&quot;));
//	log.info(contentMap.get(&quot;CONTENT&quot;).toString());
	newContentMap.put(&quot;title&quot;,contentMap.get(&quot;CONTENT_NAME&quot;));
	newContentMap.put(&quot;type&quot;,contentMap.get(&quot;CONTENT_TYPE&quot;));
	newContentList.add(newContentMap);
}
log.info(&quot;newContentList=====&quot;+newContentList);
int size1 = newContentList.size();
//转换attachments
//比较
for(int i =0;i&lt;size1;i++){
	Map map = newContentList.get(i);
	String sqlId = map.get(&quot;id&quot;);
//	log.info(&quot;sqlId===&quot;+sqlId);
	for(int j=0;j&lt;size2;j++){
		Map map2 = contents.get(j);
		String voId = map2.get(&quot;id&quot;);	
//		log.info(&quot;voId===&quot;+voId);
		if(sqlId.equals(voId)){
			Set keySet = map.keySet();
			for(String key:keySet){
				log.info(key);
				if(map.get(key).equals(map2.get(key))){
					log.info(&quot;sqlValue===&quot;+map.get(key).toString());
					log.info(&quot;sqlValue===&quot;+map2.get(key).toString());
				}else{
					dataResult = &quot;false&quot;;
					dataMessage = &quot;1111111&quot;;
				}
			}
		}
	}
}

vars.put(&quot;dataResult&quot;,dataResult);
vars.put(&quot;dataMessage&quot;,dataMessage);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="schemeFlag=N" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询pf_comb_info" enabled="true">
              <stringProp name="dataSource">vp_productcloud_test</stringProp>
              <stringProp name="query">select * from pf_comb_info where scheme_flag = &apos;N&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout">180</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">pf_comb_info</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取COMB_CODE" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.*;

Object pf_comb_info = vars.getObject(&quot;pf_comb_info&quot;);
Random random = new Random();
int size = pf_comb_info.size();
int i = random.nextInt(size);
Object sqlObj = pf_comb_info.get(i);

log.info(&quot;pf_comb_info=====&quot;+sqlObj);
String combCode = sqlObj.get(&quot;COMB_CODE&quot;);
vars.put(&quot;combCode&quot;,combCode)

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询pf_scheme_info" enabled="false">
              <stringProp name="dataSource">vp_productcloud_test</stringProp>
              <stringProp name="query">select * from pf_scheme_info where comb_code = &apos;${combCode}&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout">180</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">pf_scheme_info</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="获取SCHEME_CODE" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.*;

Object pf_scheme_info = vars.getObject(&quot;pf_scheme_info&quot;);
Random random = new Random();
int size = pf_scheme_info.size();
int i = random.nextInt(size);
Object sqlObj = pf_scheme_info.get(i);

log.info(&quot;pf_scheme_info=====&quot;+sqlObj);

String schemeCode = sqlObj.get(&quot;SCHEME_CODE&quot;);
vars.put(&quot;schemeCode&quot;,schemeCode);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询投保要素------N" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">10.135.100.53</stringProp>
              <stringProp name="HTTPSampler.port">8080</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/vp-product-cloud/comb/querySchemeContentAndAttachment/${combCode}/null/null</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="作用域变量赋值" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">//vars.put(&quot;combCode&quot;,&quot;E-JTGJYW-NEW&quot;);
//vars.put(&quot;schemeCode&quot;,&quot;123&quot;);
//vars.put(&quot;branchId&quot;,&quot;123&quot;);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
